#!/usr/bin/env ruby
# frozen_string_literal: true

require 'bundler/setup'
require 'overt'
require 'thor'
require 'formatador'
require 'pry'

class OvertCommand < Thor
  def self.exit_on_failure?
    true
  end

  # TODO: better ways to pass these to the command
  CONFIG = {
    source_dir: ENV['OVERT_SOURCE_DIR'] || 'src',
    build_dir: ENV['OVERT_BUILD_DIR'] || 'public'
  }.freeze

  desc 'clean', 'Remove all files in OVERT_BUILD_DIR'
  method_options quiet: :boolean
  def clean
    console.quiet! if options[:quiet]
    print_command_header('clean')

    do_clean(CONFIG[:build_dir])
  end

  desc 'build', 'Build the site, outputs to OVERT_BUILD_DIR'
  method_options clean: :boolean, quiet: :boolean
  def build
    console.quiet! if options[:quiet]
    print_command_header('build')

    console.line("source_dir: [bold]#{CONFIG[:source_dir]}[/]")
    console.line("build_dir: [bold]#{CONFIG[:build_dir]}[/]")
    console.line('')

    do_clean(CONFIG[:build_dir]) if options[:clean]

    start_time = Process.clock_gettime(Process::CLOCK_MONOTONIC)
    site = Overt.build(source_dir: CONFIG[:source_dir], build_dir: CONFIG[:build_dir], console:)
    end_time = Process.clock_gettime(Process::CLOCK_MONOTONIC)
    elapsed = ((end_time - start_time) * 1000).round(0)

    console.line('')
    console.line("[green][bold]Built #{site.pages.length} files[/] [green]in #{elapsed}ms[/]")
  end

  desc 'v', 'Prints version number'
  def v
    puts Overt::VERSION
  end

  private

  def console
    @console ||= Overt::ConsoleOutput.new
  end

  def do_clean(build_dir)
    console.line("[bold][red]Cleaning ./#{Pathname.new(build_dir)}[/]")
    console.line('')

    Overt.clean(build_dir)
  end

  def print_command_header(command)
    console.line('')
    console.line("ðŸ‘€ [bold][light_blue]overt #{command}[/] #{Overt::VERSION}")
    console.line('[light_black]------[/]')
    console.line('')
  end
end

OvertCommand.start
